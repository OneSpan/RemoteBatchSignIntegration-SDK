include:
  - project: 'esl/oss-pipeline'
    ref: 1.2.0
    file: '/gitlab-templates/.sonarqube.yml'
  - project: 'esl/oss-manifest-template'
    ref: master
    file: '/template/.manifest-file-template.yml'
  
.except_release_template:
  rules:
    - if: $RELEASE
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.no_cache_template:
  cache: { }

variables:
  DEFAULT_TAG: remotebatchsignintegration
  REPO: esl/remotebatchsignintegration
  CODE_DIR: /builds/remotebatchsignintegration
  CI_SCRIPTS_DIR: gitlab-ci
  SONAR_PROJECT_KEY: "com.onespan:remotebatchsignintegration"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

stages:
  - build
  - test-and-scan
  - publish
  - release


before_script:
  - mkdir -p ~/.m2 && echo "${OSS_M2_SETTINGS_BASE64}" | base64 -d > ~/.m2/settings.xml


unit-test:
  extends:
  stage: test-and-scan
  image: maven:3-jdk-8
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=maven.repository
  script:
    - mvn -B clean install -DskipTests
  allow_failure: true
  cache:
    key: one-key-to-rule-them-all
    paths:
      - maven.repository/
  artifacts:
    reports:
      junit:
  only:
    - merge_requests
    - web
    - tags
    - schedule
    - master


publish_gitlab_latest:
  extends:
    - .except_release_template
    - .publish_tag
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG'
  before_script:
    - export IMGTAG=latest


publish_gitlab_tag:
  extends:
    - .except_release_template
    - .publish_tag
  rules:
    - if: $CI_COMMIT_TAG =~ /^(\d+\.)(\d+\.)(\*|\d+)$/
  before_script:
    - export IMGTAG=$CI_COMMIT_TAG


.publish_tag:
  stage: publish
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY



release:
  image: maven:3-jdk-8
  extends:
    - .no_cache_template
  stage: release
  variables:
    PROJECT_ID: "$CI_PROJECT_ID"
  only:
    refs:
      - master
    variables:
      - $RELEASE
  script:
    - echo $MAVEN_OPTS
    - mkdir -p ~/.ssh
    - echo ${DEPLOYMENT_KEY} | base64 -d > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ls -la ~/.ssh/
    - export ORIGIN="https://gitlab-ci-token:${GITLAB_TOKEN}@git.onespan.com/${CI_PROJECT_PATH}.git"
    - git config --global user.email "$GIT_AUTHOR_EMAIL"
    - git config --global user.name "$GIT_AUTHOR_NAME"
    - git checkout -B "$CI_BUILD_REF_NAME"
    - mvn -B -DskipTests -Djacoco.skip=true clean install -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    - if [ -n "$VERSION_UPGRADE" ]; then mvn initialize release:prepare -DpushChanges=false -P$VERSION_UPGRADE;  else mvn initialize release:prepare -DpushChanges=false; fi
    - echo push "$ORIGIN" "HEAD:${CI_BUILD_REF_NAME}"
    - git push --tags "$ORIGIN" "HEAD:${CI_BUILD_REF_NAME}"
    - git reset --hard HEAD~1
    - mvn deploy -DskipTests -Pnexus-repos
  tags:
    - cloud

release_stable:
  image: maven:3-jdk-8
  extends:
    - .no_cache_template
  stage: release
  variables:
    PROJECT_ID: "$CI_PROJECT_ID"
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^stable\/.*/ && $RELEASE
  script:
    - echo $MAVEN_OPTS
    - mkdir -p ~/.ssh
    - echo ${DEPLOYMENT_KEY} | base64 -d > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ls -la ~/.ssh/
    - export ORIGIN="https://gitlab-ci-token:${GITLAB_TOKEN}@git.onespan.com/${CI_PROJECT_PATH}.git"
    - git config --global user.email "$GIT_AUTHOR_EMAIL"
    - git config --global user.name "$GIT_AUTHOR_NAME"
    - git checkout -B "$CI_BUILD_REF_NAME"
    - mvn -B -DskipTests -Djacoco.skip=true clean verify -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    - mvn -B initialize release:prepare -DpushChanges=false
    - echo push "$ORIGIN" "HEAD:${CI_BUILD_REF_NAME}"
    - git push --tags "$ORIGIN" "HEAD:${CI_BUILD_REF_NAME}"
    - git reset --hard HEAD~1
    - mvn deploy -DskipTests -Pnexus-repos
  tags:
    - cloud

create_tag_release_version:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating tag release version for ${CI_COMMIT_TAG}"
  release:
    tag_name: $CI_COMMIT_TAG
    description: 'Release for ${CI_COMMIT_TAG}'
  rules:
    - if: $CI_COMMIT_TAG =~ /^(\d+\.)(\d+\.)(\*|\d+)$/


sonarqube-scan:
  stage: test-and-scan
  image: maven:3-jdk-8
  cache:
    key: one-key-to-rule-them-all
    paths:
      - maven.repository/
  extends:
    - .sonarqube-scan-template
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=maven.repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  before_script:
    - apt update -y
    - apt install -y python3 python3-dev python3-pip && pip3 install --upgrade pip && pip3 install pyyaml requests
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@git.onespan.com/docker-base-images/gitlab-runner-with-core-utils.git
    - mv gitlab-runner-with-core-utils/oss_gitlab_runner_maven_image_with_utils/sonarIntegration.py /opt/sonarIntegration.py
    - mkdir -p ~/.m2 && echo "${OSS_M2_SETTINGS_BASE64}" | base64 -d > ~/.m2/settings.xml





