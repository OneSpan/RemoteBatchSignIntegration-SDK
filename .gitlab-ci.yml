include:
  - project: 'esl/oss-pipeline'
    ref: 1.2.0
    file: '/gitlab-templates/.sonarqube.yml'
  - project: 'esl/oss-manifest-template'
    ref: master
    file: '/template/.manifest-file-template.yml'
  - project: 'esl/oss-pipeline'
    ref: master
    file: '/gitlab-templates/docker-compose/.pact-test.yml'

  
.except_release_template:
  rules:
    - if: $RELEASE
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.no_cache_template:
  cache: { }

variables:
  DEFAULT_TAG: remotebatchsignintegration
  REPO: esl/remotebatchsignintegration
  CODE_DIR: /builds/remotebatchsignintegration
  CI_SCRIPTS_DIR: gitlab-ci
  SONAR_PROJECT_KEY: "com.onespan:remotebatchsignintegration"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

stages:
  - build
  - test-and-scan
  - publish
  - release


before_script:
  - mkdir -p ~/.m2 && echo "${OSS_M2_SETTINGS_BASE64}" | base64 -d > ~/.m2/settings.xml


unit-test:
  extends:
  stage: test-and-scan
  image: maven:3-jdk-8
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=maven.repository
  script:
    - mvn -B clean install -DskipTests
  allow_failure: true
  cache:
    key: one-key-to-rule-them-all
    paths:
      - maven.repository/
  artifacts:
    reports:
      junit:
  only:
    - merge_requests
    - web
    - tags
    - schedule
    - master


sonarqube-scan:
  stage: test-and-scan
  image: maven:3-jdk-8
  cache:
    key: one-key-to-rule-them-all
    paths:
      - maven.repository/
  extends:
    - .sonarqube-scan-template
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=maven.repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  before_script:
    - apt update -y
    - echo push "$ORIGIN" "HEAD:${TEST_VARIABLE}"
    - apt install -y python3 python3-dev python3-pip && pip3 install --upgrade pip && pip3 install pyyaml requests
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@git.onespan.com/docker-base-images/gitlab-runner-with-core-utils.git
    - mv gitlab-runner-with-core-utils/oss_gitlab_runner_maven_image_with_utils/sonarIntegration.py /opt/sonarIntegration.py
    - mkdir -p ~/.m2 && echo "${OSS_M2_SETTINGS_BASE64}" | base64 -d > ~/.m2/settings.xml

pact-provider-test:
  extends: .pact-test
  stage: test-and-scan
  variables:
    MAVEN_OPTS: -Dmaven.repo.local=maven.repository
    GIT_STRATEGY: fetch
    BACKEND_ADMIN_IMAGE: "backend-admin"
    BACKEND_ADMIN_IMAGE_TAG: latest
    BACKEND_IMAGE: "backend"
    BACKEND_IMAGE_TAG: latest
    BACKEND_DATABASE_SETUP_IMAGE: "backend_database_setup"
    BACKEND_DATABASE_SETUP_IMAGE_TAG: latest





